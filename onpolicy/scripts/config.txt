    CUDA_VISIBLE_DEVICES=0 python train/train_smac.py --env_name ${env} --algorithm_name ${algo} --experiment_name ${exp} --map_name ${map} --seed ${seed} \
    --use_value_active_masks --use_eval --max_grad_norm 10  --layer_N 1 \
    --n_training_threads 16 --n_rollout_threads 32 --num_mini_batch 2 --episode_length 400 --num_env_steps 10000000 --lr 5e-4 \
    --ppo_epoch 5 --clip_param 0.2 # \

        CUDA_VISIBLE_DEVICES=0 python train/train_smac.py --env_name ${env} --algorithm_name ${algo} --experiment_name ${exp} --map_name ${map} --seed ${seed} \
    --use_value_active_masks --use_eval --max_grad_norm 10  --layer_N 1 \
    --n_training_threads 16 --n_rollout_threads 32 --num_mini_batch 2 --episode_length 400 --num_env_steps 10000000 --lr 5e-4 \
    --ppo_epoch 5 --clip_param 0.2 --use_recurrent_policy False


#!/bin/sh
env="StarCraft2"
map="corridor"
exp="0811"
seed_max=3

echo "env is ${env}, map is ${map}, exp is ${exp}, max seed is ${seed_max}"
for seed in `seq ${seed_max}`;
do
    echo "seed is ${seed}:"
    algo="mappo"
    echo "algo is ${algo}"
    CUDA_VISIBLE_DEVICES=0 python train/train_smac.py --env_name ${env} --algorithm_name ${algo} --experiment_name ${exp} --map_name ${map} --seed ${seed} \
    --n_training_threads 1 --n_rollout_threads 8 --episode_length 400 --num_env_steps 10000000 \
    --num_mini_batch 1 --ppo_epoch 5 --gain 0.01 --use_value_active_masks --use_eval --use_recurrent_policy

    algo="mat"d
    echo "algo is ${algo}"
    CUDA_VISIBLE_DEVICES=0 python train/train_smac.py --env_name ${env} --algorithm_name ${algo} --experiment_name ${exp} --map_name ${map} --seed ${seed} \
    --n_training_threads 1 --n_rollout_threads 8 --episode_length 400 --num_env_steps 10000000 \
    --num_mini_batch 1 --ppo_epoch 10 --clip_param 0.02 --use_value_active_masks --use_eval --use_recurrent_policy

    algo="mat_dec"
    echo "algo is ${algo}"
    CUDA_VISIBLE_DEVICES=0 python train/train_smac.py --env_name ${env} --algorithm_name ${algo} --experiment_name ${exp} --map_name ${map} --seed ${seed} \
    --n_training_threads 1 --n_rollout_threads 8 --episode_length 400 --num_env_steps 10000000 \
    --num_mini_batch 1 --ppo_epoch 10 --clip_param 0.02 --use_value_active_masks --use_eval --use_recurrent_policy
done

#!/bin/sh
env="StarCraft2"
map="3s5z_vs_3s6z"
exp="0811"
seed_max=3

echo "env is ${env}, map is ${map}, exp is ${exp}, max seed is ${seed_max}"
for seed in `seq ${seed_max}`;
do
    echo "seed is ${seed}:"
    algo="rmappo"
    echo "algo is ${algo}"
    CUDA_VISIBLE_DEVICES=0 python train/train_smac.py --env_name ${env} --algorithm_name ${algo} --experiment_name ${exp} --map_name ${map} --seed ${seed} \
    --n_training_threads 1 --n_rollout_threads 8 --episode_length 400 --num_env_steps 10000000 \
    --num_mini_batch 1 --ppo_epoch 5 --gain 0.01 --use_value_active_masks --use_eval #--use_recurrent_policy

    algo="mat"
    echo "algo is ${algo}"
    CUDA_VISIBLE_DEVICES=0 python train/train_smac.py --env_name ${env} --algorithm_name ${algo} --experiment_name ${exp} --map_name ${map} --seed ${seed} \
    --n_training_threads 1 --n_rollout_threads 8 --episode_length 400 --num_env_steps 10000000 \
    --num_mini_batch 1 --ppo_epoch 10 --clip_param 0.02 --use_value_active_masks --use_eval --use_recurrent_policy

    algo="mat_dec"
    echo "algo is ${algo}"
    CUDA_VISIBLE_DEVICES=0 python train/train_smac.py --env_name ${env} --algorithm_name ${algo} --experiment_name ${exp} --map_name ${map} --seed ${seed} \
    --n_training_threads 1 --n_rollout_threads 8 --episode_length 400 --num_env_steps 10000000 \
    --num_mini_batch 1 --ppo_epoch 10 --clip_param 0.02 --use_value_active_masks --use_eval --use_recurrent_policy
done

#!/bin/sh
env="StarCraft2"
map="6h_vs_8z"
exp="0811"
seed_max=3

echo "env is ${env}, map is ${map}, exp is ${exp}, max seed is ${seed_max}"
for seed in {4..6..1}
do
    echo "seed is ${seed}:"
    algo="rmappo"
    echo "algo is ${algo}"
    CUDA_VISIBLE_DEVICES=1 python train/train_smac.py --env_name ${env} --algorithm_name ${algo} --experiment_name ${exp} --map_name ${map} --seed ${seed} \
    --n_training_threads 1 --n_rollout_threads 8 --episode_length 400 --num_env_steps 10000000 \
    --num_mini_batch 1 --ppo_epoch 5 --gain 0.01 --use_value_active_masks --use_eval #--use_recurrent_policy

    algo="mat"
    echo "algo is ${algo}"
    CUDA_VISIBLE_DEVICES=1 python train/train_smac.py --env_name ${env} --algorithm_name ${algo} --experiment_name ${exp} --map_name ${map} --seed ${seed} \
    --n_training_threads 1 --n_rollout_threads 8 --episode_length 400 --num_env_steps 10000000 \
    --num_mini_batch 1 --ppo_epoch 15 --clip_param 0.05 --use_value_active_masks --use_eval --use_recurrent_policy

    algo="mat_dec"
    echo "algo is ${algo}"
    CUDA_VISIBLE_DEVICES=1 python train/train_smac.py --env_name ${env} --algorithm_name ${algo} --experiment_name ${exp} --map_name ${map} --seed ${seed} \
    --n_training_threads 1 --n_rollout_threads 8 --episode_length 400 --num_env_steps 10000000 \
    --num_mini_batch 1 --ppo_epoch 15 --clip_param 0.05 --use_value_active_masks --use_eval --use_recurrent_policy
done
